package Solved;


/**
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
Pentagonal      Pn=n(3n−1)/2        1, 5, 12, 22, 35, ...
Hexagonal       Hn=n(2n−1)      1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.

 Useless and inneficient code but i wanna save it.
 */
import java.math.BigInteger;
public class fortyfive
{
    public static void main(String[] args){
        int number=53000;
        
        while(true){
            BigInteger T= new BigInteger(String.valueOf(number));  //T= n(n+1) /2   ---> 1/2*(sqrt(8*T+1)-1)
            T= T.multiply(new BigInteger(String.valueOf(number+1)));
            T= T.divide(new BigInteger(String.valueOf(2)));
            
            BigInteger P = new BigInteger("0");//Pn=n(3n−1)/2   ----> 1/6*(sqrt(24*P+1)+1)
            BigInteger H = new BigInteger("0");   //Hn=n(2n−1)    ----->1/4*(sqrt(8*H+1)+1)
            for(int i = number-100; i>0;i--){
                P= new BigInteger(String.valueOf(i*(3*i-1)/2));
                P= new BigInteger(String.valueOf(i));
                P= P.multiply(new BigInteger(String.valueOf(3*i-1)));
                P =P.divide(new BigInteger(String.valueOf(2)));
                //System.out.println("t:"+T.toString()+" p:"+P.toString()+" i:"+i +" n:"+ number);
                if(P.doubleValue()<T.doubleValue()){
                    //System.out.println("t:"+T.toString()+" p:"+P.toString()+" i:"+i +" n:"+ number);
                    break;
                }
                switch(P.toString().compareTo(T.toString())){
                    case 0:
                    System.out.println("t:"+T.toString()+" p:"+P.toString()+" i:"+i +" n:"+ number);
                    //System.exit(0);
                    for(int j=i-10;j>0;j--){
                        H= new BigInteger(""+j*(2*j-1));
                        if(H.doubleValue()<P.doubleValue()){
                            //System.out.println("t:"+T.toString()+" p:"+P.toString()+" i:"+i +" n:"+ number);
                            break;
                        }
                        switch(H.toString().compareTo(P.toString())){
                            case 0:
                            System.out.println("t:"+T.toString()+" p:"+P.toString()+" h:"+H.toString()+" i:"+i +" j:"+j+" n:"+ number);
                            System.exit(0);
                            break;
                        }
                    }
                    break;                  
                }

            }
            number++;
            //System.out.print(number==285 ?"\n"+ T+" "+P+" "+H +" "+ number:"");
             System.out.print(number%1000==0 ?"\n"+ T+" "+P+" "+H +" "+ number:"");
            if(number%100000==0){
                System.out.println(T+" "+P+" "+H +" "+ number);
                break;
            }
            
        }
    }
    
}
