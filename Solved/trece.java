package Solved;

/**
 Work out the first ten digits of the sum of the following one-hundred 50-digit numbers.  
   **/

import java.math.*;
public class trece
{

    public static void main (String args[]){
        String Digito = "37107287533902102798797998220837590246510135740250"+
            "4637693767749000971264812489697007805041701826053874324986199524741059474233309513058123726617309629"+
            "9194221336357416157252243056330181107240615490825023067588207539346171171980310421047513778063246676"+
            "8926167069662363382013637841838368417873436172675728112879812849979408065481931592621691275889832738"+
            "4427422891743252032192358942287679648767027218931847451445736001306439091167216856844588711603153276"+
            "7038648610584302543993961982891759366568675793495162176457141856560629502157223196586755079324193331"+
            "6490635246274190492910143244581382266334794475817892575867718337217661963751590579239728245598838407"+
            "5820356532535939900840263356894883018945862822782880181199384826282014278194139940567587151170094390"+
            "3539866437282711265382998724078447305319010429358686515506006295864861532075273371959191420517255829"+
            "7169388870771546649911559348760353292171497005693854370070576826684624621495650076471787294438377604"+
            "5328265410875682844319119063469403785521777929514536123272525000296071075082563815656710885258350721"+
            "4587657617241097644733911060721826523687722363604517423706905851860660448207621209813287860733969412"+
            "8114266041808683061932846081119106155694051268969251934325451728388641918047049293215058642563049483"+
            "6246722164843507620172791803994469300473295634069115732444386908125794514089057706229429197107928209"+
            "5503768752567877309186254074496984450833039368212618336384825330154686196124348767681297534375946515"+
            "8038628759287849020152168555482871720121925776695478182833757993103614740356856449095527097864797581"+
            "1672632010043689784255353992093183744149780686098448403098129077791799088218795327364475675590848030"+
            "8708698755139271185451707854416185242432069315033259959406895756536782107074926966537676326235447210"+
            "6979395067965269474259770973916669376304263398708541052684708299085211399427365734116182760315001271"+
            "6537860736150108085700914993951255702819874600437535829035317434717326932123578154982629742552737307"+
            "9495375976510530594696606768315657437716740187527588902802571733229619176668713819931811048770190271"+
            "2526768027607800301367868099252546340106163286652636270218540497705585629946580636237993140746255962"+
            "2407448690823117497779236546625724692332281091714191430288197103288597806669760892938638285025333403"+
            "3441306557801612781592181500556186883646842009047023053081172816430487623791969842487255036638784583"+
            "1148769693215490281042402013833512446218144177347063783299490636259666498587618221225225512486764533"+
            "6772018697169854431241957240991395900895231005882295548255300263520781532296796249481641953868218774"+
            "7608532713228572311042480345612486769706450799523637774242535411291684276865538926205024910326572967"+
            "2370191327572567528565324825826546309220705859652229798860272258331913126375147341994889534765745501"+
            "1849570145487928898485682772607771372140379887971538298203783031473527721580348144513491373226651381"+
            "3482954382919991818027891652243102739225112286953940957953066405232632538044100059654939159879593635"+
            "2974615218550237130764225512118369380358038858490341698116222072977186158236678424689157993532961922"+
            "6246795719440126904387710727504810239089552359745723189706772547915061505504953922979530901129967519"+
            "8618808822587531452958409925120382900940777077567211306739708304724483816533873502340845647058077308"+
            "8295917476714036319800818712901187549131054712658197623331044818386269515456334926366572897563400500"+
            "4284628018351707052783183942588214552122725125032755121603546981200581762165212827652751691296897789"+
            "3223819573432933994643750190783694576588335239988675506164965184775180738168837861091527357929701337"+
            "6217784275219262340194239963916804498399317331273132924185707147349566916674687634660915035914677504"+
            "9951867143023521962889489010242332511691361962662273267460800591547471830798392868535206946944540724"+
            "7684182252467441716151403642798227334805555621481897142617910342598647204516893989422179826088076852"+
            "8778364618279934631376775430780936333301898264209010848802521674670883215120185883543223812876952786"+
            "7132961247478246453863699300904931036361976387803962184073572399794223406235393808339651327408011116"+
            "6662789198148808779794187687614423003098449085141160661826293682836764744779239180335110989069790714"+
            "8578694408955299065364044742557608365997664579509666024396409905389607120198219976047599490197230297"+
            "6491398268003297315603712004137790378556608508925216730939319872750275468906903707539413042652315011"+
            "9480937724504879515095410092164586375471059843679178639167021187492431995700641917969777599028300699"+
            "1536871371193661495281130587638027841075444973307840789923115535562561142322423255033685442488917353"+
            "4488991150144064802036906806396067232219320414953541503128880339536053299340368006977710650566631954"+
            "8123488067321014673905856855793458140362782270328082616570773948327592232845941706525094512325230608"+
            "2291880205877731971983945018088807242966198081119777158542502016545090413245809786882778948721859617"+
            "7210783843506918615543566288406225747369228450951620849603980134001723930671666823555245252804609722"+
            "53503534226472524250874054075591789781264330331690";
            BigInteger bigSuma = new BigInteger("0");
            BigInteger bigDatos = new BigInteger("0");;
            int suma=0;
            for(int posicion=0; posicion <Digito.length() ; posicion+=50){
                bigDatos = new BigInteger(""+Digito.substring(posicion,posicion+50));
                bigSuma = bigSuma.add(bigDatos);

            }
            System.out.println("Suma big "+bigSuma.toString());
            System.out.println("Suma big "+bigSuma.toString().substring(0,10));
    }
}
